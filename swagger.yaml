swagger: "2.0"
info:
  version: "1.0.0"
  title: "Swagger Petstore"
host: "petstore.swagger.io"
basePath: "/v2"
tags:
- name: "Masseges"
  description: "Everything about Messages"
  externalDocs:
    description: "Find out more about this messenger"
    url: "http://*.herokuapp.io"
schemes:
- "https"
- "http"
securityDefinitions:
  BasicAuth:
    type: basic
paths:
  /messages:
    get:
      tags:
      - "Messages"
      summary: "Get unread messages"
      description: ""
      operationId: "readMessages"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Pet object that needs to be added to the store"
        required: true
        schema:
          $ref: "#/definitions/Message"
      responses:
        405:
          description: "Invalid input"
      security:
      - BasicAuth: []
    post:
      tags:
      - "Messages"
      summary: "Send a new message"
      description: ""
      operationId: "sendMessage"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Pet object that needs to be added to the store"
        required: true
        schema:
          $ref: "#/definitions/Message"
      responses:
        405:
          description: "Invalid input"
      security:
      - BasicAuth: []
    put:
      tags:
      - "Messages"
      summary: "Update Message if it is unread"
      description: ""
      operationId: "updateMessage"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Pet object that needs to be added to the store"
        required: true
        schema:
          $ref: "#/definitions/Message"
      responses:
        400:
          description: "Invalid ID supplied"
        404:
          description: "Pet not found"
        405:
          description: "Validation exception"
      security:
      - BasicAuth: []
  /messages/{messageId}:
    delete:
      tags:
      - "Messages"
      summary: "Update Message if it is unread"
      description: ""
      operationId: "deleteMessage"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "messageId"
        in: "path"
        description: "Message id to delete"
        required: true
        type: "integer"
        format: "int64"
      responses:
        400:
          description: "Invalid ID supplied"
        404:
          description: "Pet not found"
        405:
          description: "Validation exception"
      security:
      - BasicAuth: []
definitions:
  User:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      username:
        type: "string"
      firstName:
        type: "string"
      lastName:
        type: "string"
      email:
        type: "string"
      password:
        type: "string"
      phone:
        type: "string"
      userStatus:
        type: "integer"
        format: "int32"
        description: "User Status"
    xml:
      name: "User"
  Message:
    type: "object"
    required:
    - "id"
    - "text"
    - "read"
    properties:
      id:
        type: "integer"
        format: "int64"
      senderId:
        type: "integer"
        format: "int64"
      text:
        type: "string"
        example: "Hallo, how are you?"
      read:
        type: "array"
        items:
          $ref: "#/definitions/ReadConfirmation"
    xml:
      name: "Message"
  ReadConfirmation:
    type: "object"
    properties:
      message_read:
        type: "boolean"
      receiver_id:
        type: "integer"
    xml:
      name: "ReadConfirmation"
  ApiResponse:
    type: "object"
    properties:
      code:
        type: "integer"
        format: "int32"
      type:
        type: "string"
      message:
        type: "string"
